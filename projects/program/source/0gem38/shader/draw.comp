#version 450 core
layout(local_size_x =   5, local_size_y =   5, local_size_z =   5) in;
layout(binding = 0) uniform sampler2D field_velocity_pressure;
layout(binding = 1) writeonly uniform image2D screen_texture;



vec4 getVelocityColor(in vec2 vel)
{
    const vec4 map[3] = {
        vec4(1.0f, 0.0f, 0.0f, 1.0f),
        vec4(0.0f, 0.0f, 1.0f, 1.0f),
        vec4(1.0f, 1.0f, 1.0f, 1.0f),
    };
    return length(vel) * map[ uint(vel.y > 0.0f) + uint(vel.y == 0.0f) * 2 ];
}


vec4 getDensityColor(in float density)
{
    const vec4 map[3] = {
        vec4(1.0f, 0.0f, 0.0f, 1.0f),
        vec4(0.0f, 0.0f, 1.0f, 1.0f),
        vec4(1.0f, 1.0f, 1.0f, 1.0f),
    };
    return map[ uint(density > 0.0f) + uint(density == 0.0f) * 2 ];
}


uniform ivec2 ku_simdims;
vec2 k_unitCoord = vec2(1) / vec2(ku_simdims); 

void main()
{
    ivec2 texelCoord    = ivec2(gl_GlobalInvocationID.xy);
    vec2  norm_texcoord = vec2(texelCoord) * k_unitCoord;
    vec4  sampleValue   = texelFetch(field_velocity_pressure, texelCoord, 0);


    imageStore(screen_texture, texelCoord, getDensityColor(sampleValue.z));
    // imageStore(screen_texture, texelCoord, getVelocityColor(sampleValue.xy));
    // imageStore(screen_texture, texelCoord, sampleValue.xyzw);
    return;
}
