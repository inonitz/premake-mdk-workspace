#version 450 core
layout(local_size_x =   5, local_size_y =   5, local_size_z =   5) in;
layout(binding = 0, rgba32f) writeonly uniform image2D pong;


vec4 drawPointAt(
    in vec2  currPoint, 
    in vec2  desiredPoint, 
    in float radius,
    in vec4  initialColor
);



uniform float ku_dt;
uniform ivec2 ku_simdims;
uniform vec2  ku_mouseDragForce;
uniform vec2  ku_mouseDragPos;   /* in pixels (screen space) */
uniform float ku_splatterRadius; /* in pixels */
uniform vec4  ku_splatterColor;
uniform uint  ku_mousePressed;
vec2 k_unitCoord = vec2(1) / vec2(ku_simdims);


void main()
{
    ivec2 texelCoord;
    vec2 norm_texcoord, norm_mousepos;
    vec4 dyeSource;

    texelCoord = ivec2(gl_GlobalInvocationID.xy);
    norm_texcoord = vec2(texelCoord) / vec2(ku_simdims);
    norm_mousepos = ku_mouseDragPos * k_unitCoord;
    norm_mousepos.y = 1.0f - norm_mousepos.y;

    dyeSource = drawPointAt(
        norm_texcoord,
        norm_mousepos,
        ku_splatterRadius,
        ku_splatterColor
    );

    imageStore(pong, texelCoord, dyeSource * vec4(ku_mouseDragForce, 0, 1.0f) * ku_dt);
    return;
}


vec4 drawPointAt(
    in vec2  currPoint, 
    in vec2  desiredPoint, 
    in float radius,
    in vec4  initialColor
) {
    float dist = length(currPoint - desiredPoint) / radius;
    vec4  result = exp(-dist) * initialColor;
    result *= float(dist < 1); /* don't return any color if false */
    return result;
}